import {
  useConnectModal,
  useAccountModal,
  useChainModal,
  ConnectButton,
} from '@rainbow-me/rainbowkit';
import { useQuery } from '@apollo/client';
import { useAppPersistStore, useAppStore } from 'src/store/app';
import { useAccount, useConnect, useNetwork, useSignMessage } from 'wagmi';
import { Profile } from '../../generated/types';
import { CURRENT_USER_QUERY } from '@api/getProfiles';
import { useEffect, useState } from 'react';
import ProfileButton from './Profile/ProfileButton';
import { CustomConnectButton } from '@components/CustomConnectButton';
import Auth from './Auth';
type Props = {};

function Navbar({}: Props) {
  const { chain } = useNetwork();
  const { connectors, error, connectAsync } = useConnect();
  const { address, connector: activeConnector, isConnected } = useAccount();
  const { signMessageAsync, isLoading: signLoading } = useSignMessage({});
  const [isOpen, setIsOpen] = useState(false);

  const { openConnectModal } = useConnectModal();
  const { openAccountModal } = useAccountModal();
  const { openChainModal } = useChainModal();

  const profiles = useAppStore((state) => state.profiles);
  const setProfiles = useAppStore((state) => state.setProfiles);
  const profileId = useAppPersistStore((state) => state.profileId);
  const setCurrentProfile = useAppStore((state) => state.setCurrentProfile);
  const setProfileId = useAppPersistStore((state) => state.setProfileId);
  const isAuthenticated = useAppPersistStore((state) => state.isAuthenticated);
  const setIsAuthenticated = useAppPersistStore(
    (state) => state.setIsAuthenticated
  );

  const { loading, refetch } = useQuery(CURRENT_USER_QUERY, {
    variables: { ownedBy: address },
    skip: !address,
    onCompleted(data) {
      const profiles: Profile[] = data?.profiles?.items
        ?.slice()
        ?.sort((a: Profile, b: Profile) => Number(a.id) - Number(b.id))
        ?.sort((a: Profile, b: Profile) =>
          !(a.isDefault !== b.isDefault) ? 0 : a.isDefault ? -1 : 1
        );

      console.log(data?.userSigNonces?.lensHubOnChainSigNonce, '🖋️');

      profiles.map((p) => {
        if (p.isDefault === true) {
          setProfileId(p.id);
          setCurrentProfile(p);
        }
      });

      if (profiles.length === 0) {
      } else {
        setProfiles(profiles);
      }
    },
  });
  console.log({
    isConnected,
    isAuthenticated,
    profiles,
    address,
    loading,
    profileId,
  });

  useEffect(() => {
    refetch();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [profileId, isConnected, isAuthenticated, profiles, address]);

  const AuthButtons = () => {
    if (!isConnected) {
      return (
        <div className='flex gap-3'>
          <CustomConnectButton />
        </div>
      );
    }

    if (isConnected && !profileId) {
      return <Auth />;
    }

    if (isConnected && isAuthenticated && profileId) {
      return <ProfileButton />;
    }
  };

  return (
    <nav>
      <div className='sticky top-0 z-10 '>
        <div className='container px-5 mx-auto max-w-screen-xl'>
          <div className='flex relative justify-between items-center h-14 sm:h-16 group'>
            <h1 className='text-white text-4xl font-bold  '>
              <a href={'/'} className=''>
                <svg
                  width='100%'
                  height='100%'
                  viewBox='0 0 136 42'
                  fill='none'
                  xmlns='http://www.w3.org/2000/svg'
                  className='absolute top-[-3px] left-[-16px]   w-[282px] h-[64px] md:w-[384px] md:h-[87px] md:top-[-4px] md:left-[-200px] fill-white md:fill-white/50'
                >
                  <path
                    d='M12.296 33.576C10.536 33.576 8.952 33.384 7.544 33C6.136 32.616 4.936 32.088 3.944 31.416C2.952 30.712 2.184 29.88 1.64 28.92C1.128 27.96 0.872 26.872 0.872 25.656C0.872 25.528 0.872 25.4 0.872 25.272C0.872 25.144 0.888 25.048 0.92 24.984H7.352C7.352 25.048 7.352 25.112 7.352 25.176C7.352 25.24 7.352 25.304 7.352 25.368C7.384 26.168 7.64 26.824 8.12 27.336C8.6 27.816 9.224 28.168 9.992 28.392C10.792 28.616 11.624 28.728 12.488 28.728C13.256 28.728 13.992 28.664 14.696 28.536C15.432 28.376 16.04 28.104 16.52 27.72C17.032 27.336 17.288 26.84 17.288 26.232C17.288 25.464 16.968 24.872 16.328 24.456C15.72 24.04 14.904 23.704 13.88 23.448C12.888 23.192 11.8 22.904 10.616 22.584C9.528 22.328 8.44 22.04 7.352 21.72C6.264 21.368 5.272 20.92 4.376 20.376C3.512 19.832 2.808 19.128 2.264 18.264C1.72 17.368 1.448 16.248 1.448 14.904C1.448 13.592 1.736 12.456 2.312 11.496C2.888 10.504 3.672 9.688 4.664 9.048C5.688 8.408 6.872 7.944 8.216 7.656C9.592 7.336 11.064 7.176 12.632 7.176C14.104 7.176 15.48 7.336 16.76 7.656C18.04 7.944 19.16 8.392 20.12 9C21.08 9.576 21.832 10.312 22.376 11.208C22.92 12.072 23.192 13.048 23.192 14.136C23.192 14.36 23.192 14.568 23.192 14.76C23.192 14.952 23.176 15.08 23.144 15.144H16.76V14.76C16.76 14.184 16.584 13.704 16.232 13.32C15.88 12.904 15.368 12.584 14.696 12.36C14.056 12.136 13.272 12.024 12.344 12.024C11.704 12.024 11.112 12.072 10.568 12.168C10.056 12.264 9.608 12.408 9.224 12.6C8.84 12.792 8.536 13.032 8.312 13.32C8.12 13.576 8.024 13.896 8.024 14.28C8.024 14.824 8.248 15.272 8.696 15.624C9.176 15.944 9.8 16.216 10.568 16.44C11.336 16.664 12.184 16.904 13.112 17.16C14.264 17.48 15.464 17.8 16.712 18.12C17.992 18.408 19.176 18.808 20.264 19.32C21.352 19.832 22.232 20.568 22.904 21.528C23.576 22.456 23.912 23.72 23.912 25.32C23.912 26.856 23.608 28.152 23 29.208C22.424 30.264 21.608 31.112 20.552 31.752C19.496 32.392 18.264 32.856 16.856 33.144C15.448 33.432 13.928 33.576 12.296 33.576ZM24.9039 41.544V7.752H30.3759L30.9519 11.16H31.2879C32.1199 9.784 33.2079 8.776 34.5519 8.136C35.8959 7.496 37.3839 7.176 39.0159 7.176C41.1279 7.176 42.9359 7.64 44.4399 8.568C45.9759 9.496 47.1439 10.936 47.9439 12.888C48.7759 14.84 49.1919 17.352 49.1919 20.424C49.1919 23.4 48.7759 25.864 47.9439 27.816C47.1119 29.768 45.9439 31.224 44.4399 32.184C42.9679 33.112 41.2399 33.576 39.2559 33.576C38.1679 33.576 37.1599 33.448 36.2319 33.192C35.3039 32.968 34.4719 32.6 33.7359 32.088C32.9999 31.576 32.3759 30.952 31.8639 30.216H31.5759V41.544H24.9039ZM36.9519 28.104C38.2959 28.104 39.3519 27.848 40.1199 27.336C40.9199 26.792 41.4959 25.992 41.8479 24.936C42.1999 23.848 42.3759 22.52 42.3759 20.952V19.848C42.3759 18.248 42.1999 16.92 41.8479 15.864C41.4959 14.776 40.9199 13.976 40.1199 13.464C39.3519 12.92 38.2959 12.648 36.9519 12.648C35.7039 12.648 34.6799 12.936 33.8799 13.512C33.0799 14.088 32.4879 14.92 32.1039 16.008C31.7199 17.096 31.5279 18.408 31.5279 19.944V20.76C31.5279 21.88 31.6399 22.904 31.8639 23.832C32.0879 24.728 32.4079 25.496 32.8239 26.136C33.2719 26.776 33.8319 27.272 34.5039 27.624C35.1759 27.944 35.9919 28.104 36.9519 28.104ZM61.739 33.576C58.955 33.576 56.619 33.112 54.731 32.184C52.843 31.224 51.419 29.768 50.459 27.816C49.499 25.864 49.019 23.384 49.019 20.376C49.019 17.336 49.499 14.856 50.459 12.936C51.419 10.984 52.827 9.544 54.683 8.616C56.571 7.656 58.875 7.176 61.595 7.176C64.155 7.176 66.315 7.64 68.075 8.568C69.835 9.464 71.163 10.872 72.059 12.792C72.955 14.68 73.403 17.128 73.403 20.136V21.864H55.787C55.851 23.336 56.075 24.584 56.459 25.608C56.875 26.632 57.499 27.4 58.331 27.912C59.195 28.392 60.331 28.632 61.739 28.632C62.507 28.632 63.195 28.536 63.803 28.344C64.443 28.152 64.987 27.864 65.435 27.48C65.883 27.096 66.235 26.616 66.491 26.04C66.747 25.464 66.875 24.808 66.875 24.072H73.403C73.403 25.672 73.115 27.064 72.539 28.248C71.963 29.432 71.163 30.424 70.139 31.224C69.115 31.992 67.883 32.584 66.443 33C65.035 33.384 63.467 33.576 61.739 33.576ZM55.883 17.64H66.539C66.539 16.68 66.411 15.848 66.155 15.144C65.931 14.44 65.611 13.864 65.195 13.416C64.779 12.968 64.267 12.648 63.659 12.456C63.083 12.232 62.427 12.12 61.691 12.12C60.475 12.12 59.451 12.328 58.619 12.744C57.819 13.128 57.195 13.736 56.747 14.568C56.331 15.368 56.043 16.392 55.883 17.64ZM85.5463 33.576C82.8583 33.576 80.6023 33.112 78.7783 32.184C76.9543 31.224 75.5623 29.768 74.6023 27.816C73.6743 25.832 73.2103 23.352 73.2103 20.376C73.2103 17.336 73.6743 14.856 74.6023 12.936C75.5623 10.984 76.9543 9.528 78.7783 8.568C80.6343 7.608 82.8903 7.128 85.5463 7.128C87.2743 7.128 88.8263 7.336 90.2023 7.752C91.6103 8.168 92.8263 8.808 93.8503 9.672C94.8743 10.536 95.6423 11.608 96.1543 12.888C96.6983 14.136 96.9703 15.624 96.9703 17.352H90.2983C90.2983 16.2 90.1223 15.256 89.7703 14.52C89.4183 13.784 88.8743 13.224 88.1383 12.84C87.4343 12.456 86.5383 12.264 85.4503 12.264C84.1703 12.264 83.1303 12.552 82.3303 13.128C81.5303 13.704 80.9383 14.552 80.5543 15.672C80.1703 16.792 79.9783 18.184 79.9783 19.848V20.952C79.9783 22.584 80.1703 23.96 80.5543 25.08C80.9703 26.2 81.5943 27.048 82.4263 27.624C83.2583 28.168 84.3463 28.44 85.6903 28.44C86.7783 28.44 87.6743 28.248 88.3783 27.864C89.1143 27.48 89.6743 26.904 90.0583 26.136C90.4423 25.368 90.6343 24.44 90.6343 23.352H96.9703C96.9703 24.984 96.6983 26.44 96.1543 27.72C95.6423 29 94.8743 30.072 93.8503 30.936C92.8583 31.8 91.6583 32.456 90.2503 32.904C88.8423 33.352 87.2743 33.576 85.5463 33.576ZM105.67 33.576C104.07 33.576 102.774 33.288 101.782 32.712C100.79 32.136 100.07 31.368 99.6219 30.408C99.1739 29.416 98.9499 28.328 98.9499 27.144V12.888H95.8299V7.752H99.1899L100.438 0.551997H105.622V7.752H110.23V12.888H105.622V26.04C105.622 26.808 105.798 27.4 106.15 27.816C106.502 28.2 107.078 28.392 107.878 28.392H110.23V32.808C109.846 32.936 109.398 33.048 108.886 33.144C108.374 33.272 107.83 33.368 107.254 33.432C106.678 33.528 106.15 33.576 105.67 33.576ZM122.316 33.576C119.564 33.576 117.228 33.112 115.308 32.184C113.388 31.224 111.932 29.768 110.94 27.816C109.948 25.832 109.452 23.352 109.452 20.376C109.452 17.336 109.948 14.856 110.94 12.936C111.932 10.984 113.388 9.544 115.308 8.616C117.228 7.656 119.564 7.176 122.316 7.176C125.132 7.176 127.484 7.656 129.372 8.616C131.292 9.544 132.748 10.984 133.74 12.936C134.732 14.856 135.228 17.336 135.228 20.376C135.228 23.352 134.732 25.832 133.74 27.816C132.748 29.768 131.292 31.224 129.372 32.184C127.484 33.112 125.132 33.576 122.316 33.576ZM122.316 28.392C123.788 28.392 124.956 28.12 125.82 27.576C126.716 27.032 127.372 26.2 127.788 25.08C128.204 23.96 128.412 22.584 128.412 20.952V19.8C128.412 18.168 128.204 16.792 127.788 15.672C127.372 14.552 126.716 13.72 125.82 13.176C124.956 12.6 123.788 12.312 122.316 12.312C120.876 12.312 119.708 12.6 118.812 13.176C117.948 13.72 117.308 14.552 116.892 15.672C116.476 16.792 116.268 18.168 116.268 19.8V20.952C116.268 22.584 116.476 23.96 116.892 25.08C117.308 26.2 117.948 27.032 118.812 27.576C119.708 28.12 120.876 28.392 122.316 28.392Z'
                    fill='white'
                  />
                </svg>
              </a>
            </h1>
            <div className='flex flex-row gap-4'>{AuthButtons()}</div>
          </div>
        </div>
      </div>
    </nav>
  );
}

export default Navbar;
